name: Deploy

on:
  workflow_dispatch:

env:
  PROJECT: STR-X

jobs:
  build_and_deploy:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
        fail-fast: false
        matrix:
          include:
            - os: ubuntu-20.04
              cc: gcc
              cpp: g++

    steps:

    - name: Install Linux Deps
      if: runner.os == 'Linux'
      run: |
        sudo apt update
        sudo apt install libasound2-dev libx11-dev \
          libxcomposite-dev libxcursor-dev libxext-dev libxinerama-dev \
          libxrandr-dev libxrender-dev libfreetype6-dev libglu1-mesa-dev \
          libjack-jackd2-dev ninja-build

    # TODO: Install Ninja on MacOS/Windows

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Configure
      run: |
        cmake -Bbuild -GNinja -DPRODUCTION_BUILD=1
        -DCMAKE_C_COMPILER=${{ matrix.cc }} -DCMAKE_CXX_COMPILER=${{ matrix.cpp }}

    - name: Build
      run: |
        cmake --build build --config Release --parallel 4

    - name: Get artifacts
      run: |
        echo >> "ARTIFACTS_PATH=build/${{ env.PROJECT }}_artefacts/Release/" >> $GITHUB_ENV

    - name: Compress Linux
      working-directory: ${{ env.ARTIFACTS_PATH }}
      run: |
        tar cfJ "${{ env.PROJECT }}-linux.tar.xz ./VST3/${{ env.PROJECT}}.vst3 ./LV2/${{ env.PROJECT}}.lv2 ./CLAP/${{ env.PROJECT }}.clap

    - name: Upload Linux
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.PROJECT }}-linux.tar.xz
        path: ${{ env.ARTIFACTS_PATH }}/${{ env.PROJECT}}-linux.tar.xz
